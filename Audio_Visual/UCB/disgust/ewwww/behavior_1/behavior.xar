<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="224" y="190"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../ewwwwww.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="Bored" id="11" localization="8" tooltip="ID : #02C 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Confused" x="202" y="77"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="92"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe35" index="35"><Diagram><Box name="Blink" id="1" localization="8" tooltip="This box makes the robot blink once." x="174" y="57"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed3", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed4", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed5", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True )
        time.sleep( 2)
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="92" value="-11.467" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="18" value="-43.1" /><Key frame="31" value="-43.1" /><Key frame="46" value="-43.1" /><Key frame="92" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="92" value="-2.49569" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="18" value="-8.5" /><Key frame="31" value="-8.5" /><Key frame="46" value="-8.5" /><Key frame="92" value="0.000526037" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="92" value="-0.725469" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="92" value="-29.6818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="92" value="-70.5191" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="18" value="0.98" /><Key frame="31" value="0.98" /><Key frame="46" value="0.98" /><Key frame="92" value="0.59051" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="18" value="55.8" /><Key frame="31" value="55.8" /><Key frame="46" value="55.8" /><Key frame="92" value="88.8368" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="18" value="24.6" /><Key frame="31" value="24.6" /><Key frame="46" value="24.6" /><Key frame="92" value="8.11378" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="18" value="-20.9" /><Key frame="31" value="-20.9" /><Key frame="46" value="-20.9" /><Key frame="92" value="-0.444748" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="12" value="69.7" /><Key frame="13" value="69.7" /><Key frame="14" value="69.7" /><Key frame="15" value="69.7" /><Key frame="16" value="69.7" /><Key frame="17" value="69.7" /><Key frame="18" value="69.7" /><Key frame="19" value="69.7" /><Key frame="20" value="69.7" /><Key frame="21" value="69.7" /><Key frame="22" value="69.7" /><Key frame="23" value="69.7" /><Key frame="30" value="69.7" /><Key frame="31" value="69.7" /><Key frame="32" value="69.7" /><Key frame="33" value="69.7" /><Key frame="34" value="69.7" /><Key frame="35" value="69.7" /><Key frame="36" value="69.7" /><Key frame="45" value="69.7" /><Key frame="46" value="69.7" /><Key frame="47" value="69.7" /><Key frame="48" value="69.7" /><Key frame="49" value="69.7" /><Key frame="50" value="69.7" /><Key frame="51" value="69.7" /><Key frame="92" value="29.9793" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="47.6073" /><Key frame="13" value="47.6073" /><Key frame="14" value="47.6073" /><Key frame="15" value="47.6073" /><Key frame="16" value="47.6073" /><Key frame="17" value="47.6073" /><Key frame="18" value="47.6073" /><Key frame="19" value="47.6073" /><Key frame="20" value="47.6073" /><Key frame="21" value="47.6073" /><Key frame="22" value="47.6073" /><Key frame="23" value="47.6073" /><Key frame="30" value="47.6073" /><Key frame="31" value="47.6073" /><Key frame="32" value="47.6073" /><Key frame="33" value="47.6073" /><Key frame="34" value="47.6073" /><Key frame="35" value="47.6073" /><Key frame="36" value="47.6073" /><Key frame="45" value="47.6073" /><Key frame="46" value="47.6073" /><Key frame="47" value="47.6073" /><Key frame="48" value="47.6073" /><Key frame="49" value="47.6073" /><Key frame="50" value="47.6073" /><Key frame="51" value="47.6073" /><Key frame="60" value="83.8" /><Key frame="92" value="70.8446" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="12" value="0.89" /><Key frame="13" value="0.89" /><Key frame="14" value="0.89" /><Key frame="15" value="0.89" /><Key frame="16" value="0.89" /><Key frame="17" value="0.89" /><Key frame="18" value="0.89" /><Key frame="19" value="0.89" /><Key frame="20" value="0.89" /><Key frame="21" value="0.89" /><Key frame="22" value="0.89" /><Key frame="23" value="0.89" /><Key frame="24" value="1" /><Key frame="28" value="0.89" /><Key frame="30" value="0.89" /><Key frame="31" value="0.89" /><Key frame="32" value="0.89" /><Key frame="33" value="0.89" /><Key frame="34" value="0.89" /><Key frame="35" value="0.89" /><Key frame="36" value="0.89" /><Key frame="37" value="1" /><Key frame="41" value="0.89" /><Key frame="45" value="0.89" /><Key frame="46" value="0.89" /><Key frame="47" value="0.89" /><Key frame="48" value="0.89" /><Key frame="49" value="0.89" /><Key frame="50" value="0.89" /><Key frame="51" value="0.89" /><Key frame="52" value="1" /><Key frame="56" value="0.89" /><Key frame="60" value="0.5" /><Key frame="92" value="0.603567" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="12" value="-7.7" /><Key frame="13" value="-7.7" /><Key frame="14" value="-7.7" /><Key frame="15" value="-7.7" /><Key frame="16" value="-7.7" /><Key frame="17" value="-7.7" /><Key frame="18" value="-7.7" /><Key frame="19" value="-7.7" /><Key frame="20" value="-7.7" /><Key frame="21" value="-7.7" /><Key frame="22" value="-7.7" /><Key frame="23" value="-7.7" /><Key frame="30" value="-7.7" /><Key frame="31" value="-7.7" /><Key frame="32" value="-7.7" /><Key frame="33" value="-7.7" /><Key frame="34" value="-7.7" /><Key frame="35" value="-7.7" /><Key frame="36" value="-7.7" /><Key frame="45" value="-7.7" /><Key frame="46" value="-7.7" /><Key frame="47" value="-7.7" /><Key frame="48" value="-7.7" /><Key frame="49" value="-7.7" /><Key frame="50" value="-7.7" /><Key frame="51" value="-7.7" /><Key frame="92" value="88.8765" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="4" value="-14.7" /><Key frame="12" value="-18.5" /><Key frame="13" value="-18.5" /><Key frame="14" value="-18.5" /><Key frame="15" value="-18.5" /><Key frame="16" value="-18.5" /><Key frame="17" value="-18.5" /><Key frame="18" value="-18.5" /><Key frame="19" value="-18.5" /><Key frame="20" value="-18.5" /><Key frame="21" value="-18.5" /><Key frame="22" value="-18.5" /><Key frame="23" value="-18.5" /><Key frame="30" value="-18.5" /><Key frame="31" value="-18.5" /><Key frame="32" value="-18.5" /><Key frame="33" value="-18.5" /><Key frame="34" value="-18.5" /><Key frame="35" value="-18.5" /><Key frame="36" value="-18.5" /><Key frame="45" value="-18.5" /><Key frame="46" value="-18.5" /><Key frame="47" value="-18.5" /><Key frame="48" value="-18.5" /><Key frame="49" value="-18.5" /><Key frame="50" value="-18.5" /><Key frame="51" value="-18.5" /><Key frame="60" value="-11.5" /><Key frame="92" value="-8.44143" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="9" value="6.8" /><Key frame="12" value="87.1691" /><Key frame="13" value="87.1691" /><Key frame="14" value="87.1691" /><Key frame="15" value="87.1691" /><Key frame="16" value="87.1691" /><Key frame="17" value="87.1691" /><Key frame="18" value="87.1691" /><Key frame="19" value="87.1691" /><Key frame="20" value="87.1691" /><Key frame="21" value="87.1691" /><Key frame="22" value="87.1691" /><Key frame="23" value="87.1691" /><Key frame="30" value="87.1691" /><Key frame="31" value="87.1691" /><Key frame="32" value="87.1691" /><Key frame="33" value="87.1691" /><Key frame="34" value="87.1691" /><Key frame="35" value="87.1691" /><Key frame="36" value="87.1691" /><Key frame="45" value="87.1691" /><Key frame="46" value="87.1691" /><Key frame="47" value="87.1691" /><Key frame="48" value="87.1691" /><Key frame="49" value="87.1691" /><Key frame="50" value="87.1691" /><Key frame="51" value="87.1691" /><Key frame="60" value="83" /><Key frame="92" value="0.216518" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>